name: 'Testspace Setup CLI'
description: 'Setup Testspace client to publish CI results from workflow to Dashboard; report flaky tests, metrics, graphs, and analytics'
author: 'S2 Technologies, Inc.'
inputs:
  domain:
    description: 'Testspace domain name'
    required: true
  token:
    description: 'Testspace access token (required for private repos only)'
    required: false
  config-args:
    description: 'Custom "config" arguments'
    required: false
branding:
  color: green
  icon: terminal
runs:
  using: 'composite'
  steps:
    - run: |
        base_url=https://testspace-client.s3.amazonaws.com
        if [ "$TESTSPACE_CLIENT_VER" ]; then version="-$TESTSPACE_CLIENT_VER"; fi
        case `uname -s` in
          Linux)
            folder=$HOME/bin
            mkdir -p $folder
            arch=`uname -m`
            if [ "$arch" != "x86_64" ]; then version="-${arch}${version}"; fi
            curl -fsSL ${base_url}/testspace-linux${version}.tgz | tar -zxvf- -C $RUNNER_TEMP
            cp -f -p -u $RUNNER_TEMP/testspace $folder
            ;;
          Darwin)
            folder=$HOME/bin
            mkdir -p $folder
            arch=`uname -m`
            if [ "$arch" != "x86_64" ]; then version="-${arch}${version}"; fi
            curl -fsSL ${base_url}/testspace-darwin${version}.tgz | tar -zxvf- -C $RUNNER_TEMP
            rsync -t -u $RUNNER_TEMP/testspace $folder
            ;;
          *) # Windows
            folder=$LOCALAPPDATA\Programs\testspace
            mkdir -p "$folder"
            curl -OsSL ${base_url}/testspace-windows${version}.zip
            unzip -q -o testspace-windows${version}.zip -d $RUNNER_TEMP
            rm testspace-windows${version}.zip
            cp -f -p -u $RUNNER_TEMP/testspace.exe "$folder"
            ;;
        esac
        echo "$folder" >> $GITHUB_PATH
      shell: bash
    - if: ${{ github.event_name == 'pull_request' }}
      run: command -V jq || echo "::warning::$WARNING"
      shell: bash
      env:
        WARNING: 'To be able to properly obtain the originating PR-number, Testspace requires the jq utility to be installed on your OS image (named jq/jq.exe and on the system PATH)'
    - run: |
        testspace --version
        domain=${{ inputs.domain }}
        if [ "${domain%%.*}" == "$domain" ]; then domain="${domain}.testspace.com"; fi
        token=${{ inputs.token }}
        if [ "$token" ]; then
          echo "::add-mask::${{ inputs.token }}"
          if [ "${token%%:*}" == "$token" ]; then token="${token}:"; fi
          domain="${token}@${domain}"
        fi
        testspace config url "${domain}" ${{ inputs.config-args }}
      shell: bash
